language: cpp

sudo: required

compiler:
  - g++
  - clang

os: linux

dist: bionic

addons:
  apt:
    update: true
    sources:
      - sourceline: 'ppa:mhier/libboost-latest'
    packages:
      - ninja-build
      - libboost1.70-dev
      - valgrind
      - zookeeper
      - zookeeperd
      - gdb

env:
  global:
    - CXX_STANDARD=17
    - TEST_DIR=tests
    - EXEC=$TEST_DIR/CoroKafkaTests.Linux

after_failure:
  - COREFILE=$(find $TRAVIS_BUILD_DIR/cores -maxdepth 1 -name "core.*" -print | head -1)
  - echo $COREFILE
  - if [[ -f "$COREFILE" ]]; then gdb -c "$COREFILE" $EXEC -ex "thread apply all bt" -ex "set pagination 0" -batch; fi

before_script:
  - ulimit -c
  - ulimit -a -S
  - ulimit -a -H
  - mkdir -p -m 0777 $TRAVIS_BUILD_DIR/cores
  - sudo sysctl -w kernel.core_pattern=$TRAVIS_BUILD_DIR/cores/core.%e.%p
  - cat /proc/sys/kernel/core_pattern
  - service --status-all || true
  - KAFKA_REL=2.8.1  
  - KAFKA_VERSION=2.12-$KAFKA_REL
  - RD_KAFKA_VERSION=v1.6.0
  - wget http://apache.cs.utah.edu/kafka/$KAFKA_REL/kafka_$KAFKA_VERSION.tgz && tar -xvzf kafka_$KAFKA_VERSION.tgz
  - ./kafka_$KAFKA_VERSION/bin/kafka-server-start.sh ./kafka_$KAFKA_VERSION/config/server.properties > /dev/null 2> /dev/null &
  - while ! echo "asd" | nc localhost 9092; do sleep 1; done
  - ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic topic_no_headers --partitions 4 --replication-factor 1
  - ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic topic_with_headers --partitions 4 --replication-factor 1

script:
  - ulimit -c unlimited -S #enable core dumps
  - INSTALL_DIR=/home/travis/build/accelerated/corokafka/install
  - mkdir install

# Build and install GTEST framework
  - git clone https://github.com/google/googletest.git
  - cd googletest
  - cmake -DCMAKE_CXX_STANDARD=$CXX_STANDARD -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -S . -G Ninja
  - ninja install
  - cd ..

# Build and install rdkafka
  - git clone https://github.com/edenhill/librdkafka.git --branch $RD_KAFKA_VERSION
  - cd librdkafka
  - cmake -DCMAKE_CXX_STANDARD=$CXX_STANDARD -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -S . -G Ninja
  - ninja install
  - cd ..

# Build and install cppkafka
  - git clone https://github.com/mfontanini/cppkafka.git
  - cd cppkafka
  - cmake -DCMAKE_CXX_STANDARD=$CXX_STANDARD -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -S . -G Ninja
  - ninja install
  - cd ..

# Build and install quantum
  - git clone https://github.com/bloomberg/quantum.git
  - cd quantum
  - cmake -DCMAKE_CXX_STANDARD=$CXX_STANDARD -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DQUANTUM_BOOST_USE_VALGRIND=ON -S . -G Ninja
  - ninja install
  - cd ..

# Build and run corokafka
  - cmake -DCMAKE_CXX_STANDARD=$CXX_STANDARD
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_PREFIX_PATH=$INSTALL_DIR
        -DCOROKAFKA_CPPKAFKA_STATIC_LIB=ON
        -DCOROKAFKA_RDKAFKA_STATIC_LIB=ON
        -DCOROKAFKA_BOOST_STATIC_LIBS=OFF
        -DCOROKAFKA_ENABLE_PIC=ON
        -DCOROKAFKA_ENABLE_TESTS=ON
        -DCMAKE_BUILD_TYPE=Debug
        -G Ninja -S .
  - ninja CoroKafkaTests
  - $EXEC -b localhost:9092 -k producer -t topic_with_headers -n topic_no_headers
